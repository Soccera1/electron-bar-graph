# Generated by configure script
# Electron Bar Graph Makefile

# Configuration
PREFIX = /opt/custom
BINDIR = /opt/custom/bin
DATADIR = /opt/custom/share/electron-bar-graph
EMACS_PREFIX = /usr/local
EMACS_INTEGRATION = yes
EMACS_BUILD = no
DEBUG = no
VERBOSE = no
BUILD_TYPE = release
NODE_VERSION = 18
BUN_VERSION = latest

# Directories
SRCDIR = electron-bar-graph
BUILDDIR = build
DISTDIR = dist

# Files
MAIN_JS = $(SRCDIR)/main.js
RENDERER_JS = $(SRCDIR)/renderer.js
INDEX_HTML = $(SRCDIR)/index.html
STYLE_CSS = $(SRCDIR)/style.css
BAR_GRAPH_EL = $(SRCDIR)/bar-graph.el
PACKAGE_JSON = $(SRCDIR)/package.json
CONFIG_H = config.h

# Default target
all: build

# Build targets
build: $(CONFIG_H)
	@echo "Building Electron Bar Graph..."
	@mkdir -p $(BUILDDIR)
	@rsync -a --exclude=node_modules $(SRCDIR)/ $(BUILDDIR)/ 2>/dev/null || cp -r $(SRCDIR)/* $(BUILDDIR)/ 2>/dev/null || true
	@cp $(CONFIG_H) $(BUILDDIR)/
	@cd $(BUILDDIR) && bun install
	@echo "Build complete!"

# Install targets
install: build
	@echo "Installing Electron Bar Graph..."
	@mkdir -p $(BINDIR)
	@mkdir -p $(DATADIR)
	@cp -r $(BUILDDIR)/* $(DATADIR)/
	@echo "#!/bin/bash" > $(BINDIR)/electron-bar-graph
	@echo "cd $(DATADIR) && electron . \"$\"" >> $(BINDIR)/electron-bar-graph
	@chmod +x $(BINDIR)/electron-bar-graph
	@echo "Installation complete!"
	@echo "Note: You may need to run 'make install' as root for system-wide installation"

# Clean targets
clean:
	@echo "Cleaning build files..."
	@rm -rf $(BUILDDIR)
	@rm -rf $(DISTDIR)
	@rm -f $(CONFIG_H)
	@echo "Clean complete!"

# Distclean target
distclean: clean
	@echo "Cleaning all generated files..."
	@rm -f Makefile
	@rm -rf emacs-build
	@echo "Distclean complete!"

# Test targets
test: test-build test-unit

test-unit: build
	@echo "üß™ Running JavaScript unit tests..."
	@cd $(BUILDDIR) && bun test

test-build:
	@echo "üîß Running build system tests..."
	@if [ -f "test-configure.sh" ]; then \
		chmod +x test-configure.sh && ./test-configure.sh; \
	else \
		echo "‚ö†Ô∏è  test-configure.sh not found, skipping build system tests"; \
	fi

test-coverage: build
	@echo "üìä Running tests with coverage..."
	@cd $(BUILDDIR) && bun test --coverage

test-watch: build
	@echo "üëÄ Running tests in watch mode..."
	@cd $(BUILDDIR) && bun test --watch

# Development targets
dev: build
	@echo "Starting development server..."
	@cd $(BUILDDIR) && bun run dev

# Package targets
package: build
	@echo "Creating package..."
	@mkdir -p $(DISTDIR)
	@tar -czf $(DISTDIR)/electron-bar-graph-$(BUILD_TYPE).tar.gz -C $(BUILDDIR) .
	@echo "Package created: $(DISTDIR)/electron-bar-graph-$(BUILD_TYPE).tar.gz"

# Help target
help:
	@echo "Available targets:"
	@echo "  build        - Build the application"
	@echo "  install      - Install the application"
	@echo "  clean        - Clean build files"
	@echo "  distclean    - Clean all generated files"
	@echo "  test         - Run all tests (build + unit tests)"
	@echo "  test-unit    - Run JavaScript unit tests only"
	@echo "  test-build   - Run build system tests only"
	@echo "  test-coverage- Run tests with coverage report"
	@echo "  test-watch   - Run tests in watch mode"
	@echo "  dev          - Start development server"
	@echo "  package      - Create distribution package"
	@echo "  help         - Show this help"

.PHONY: all build install clean distclean test test-unit test-build test-coverage test-watch dev package help
